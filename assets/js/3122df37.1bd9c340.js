"use strict";(self.webpackChunkece_178_notes=self.webpackChunkece_178_notes||[]).push([[4191],{6730:(s,e,a)=>{a.r(e),a.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>o,frontMatter:()=>i,metadata:()=>c,toc:()=>h});var n=a(4848),t=a(8453);const i={},l="Patch Match",c={id:"Notes/patch-match",title:"Patch Match",description:"Some Very Terse Notes on the PatchMatch Randomized Correspondence Algorithm",source:"@site/docs/Notes/patch-match.mdx",sourceDirName:"Notes",slug:"/Notes/patch-match",permalink:"/docs/Notes/patch-match",draft:!1,unlisted:!1,editUrl:"https://github.com/amilworks/ece178/edit/main/ece-178-notes/docs/Notes/patch-match.mdx",tags:[],version:"current",lastUpdatedBy:"amilworks",lastUpdatedAt:1710188813,formattedLastUpdatedAt:"Mar 11, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Sampling and Reconstruction",permalink:"/docs/Notes/sampling-and-reconstruction"},next:{title:"Programming Help",permalink:"/docs/category/programming-help"}},r={},h=[{value:"What is PatchMatch",id:"what-is-patchmatch",level:3},{value:"Definitions",id:"definitions",level:3},{value:"Theoretical Foundations",id:"theoretical-foundations",level:4},{value:"Motivations, Applications, and Advantages",id:"motivations-applications-and-advantages",level:4},{value:"PatchMatch Algorithm",id:"patchmatch-algorithm",level:2},{value:"Pseudocode for the PatchMatch Algorithm",id:"pseudocode-for-the-patchmatch-algorithm",level:3},{value:"Brute-Force Implementation in Python",id:"brute-force-implementation-in-python",level:3},{value:"Thought Process and Optimization Opportunities",id:"thought-process-and-optimization-opportunities",level:3}];function m(s){const e={admonition:"admonition",annotation:"annotation",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",math:"math",mfrac:"mfrac",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msub:"msub",msup:"msup",mtext:"mtext",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",...(0,t.R)(),...s.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"patch-match",children:"Patch Match"}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsx)(e.p,{children:"Some Very Terse Notes on the PatchMatch Randomized Correspondence Algorithm"}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"what-is-patchmatch",children:"What is PatchMatch"}),"\n",(0,n.jsx)(e.p,{children:"At a high level, PatchMatch is an algorithm that efficiently finds approximate nearest neighbor matches between image patches. It leverages randomness to provide fast convergence and has applications which we will conquer in our homeworks, including inpainting, retargeting, and synthesis."}),"\n",(0,n.jsx)(e.h3,{id:"definitions",children:"Definitions"}),"\n",(0,n.jsxs)(e.ol,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Image Patch"}),": A small, contiguous region of an image, typically square, that captures local structure and texture. Patches are often used to represent and compare local image features."]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Nearest Neighbor Field"}),": A mapping from each pixel in an image to its nearest neighbor in another image. In the context of PatchMatch, this mapping is between patches in two images."]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Spatial Coherence"}),": The property of natural images where neighboring pixels or patches tend to have similar values. This property is exploited by PatchMatch to guide the search for nearest neighbors. Coherence is defined as:"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.span,{className:"katex-display",children:(0,n.jsxs)(e.span,{className:"katex",children:[(0,n.jsx)(e.span,{className:"katex-mathml",children:(0,n.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,n.jsxs)(e.semantics,{children:[(0,n.jsxs)(e.mrow,{children:[(0,n.jsx)(e.mtext,{children:"Coherence"}),(0,n.jsx)(e.mo,{children:"="}),(0,n.jsxs)(e.mfrac,{children:[(0,n.jsx)(e.mtext,{children:"Similarity\xa0of\xa0neighboring\xa0patches"}),(0,n.jsx)(e.mtext,{children:"Dissimilarity\xa0of\xa0non-neighboring\xa0patches"})]})]}),(0,n.jsx)(e.annotation,{encoding:"application/x-tex",children:"\\text{Coherence} = \\frac{\\text{Similarity of neighboring patches}}{\\text{Dissimilarity of non-neighboring patches}}"})]})})}),(0,n.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"0.6944em"}}),(0,n.jsx)(e.span,{className:"mord text",children:(0,n.jsx)(e.span,{className:"mord",children:"Coherence"})}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,n.jsx)(e.span,{className:"mrel",children:"="}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"2.2519em",verticalAlign:"-0.8804em"}}),(0,n.jsxs)(e.span,{className:"mord",children:[(0,n.jsx)(e.span,{className:"mopen nulldelimiter"}),(0,n.jsx)(e.span,{className:"mfrac",children:(0,n.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(e.span,{className:"vlist-r",children:[(0,n.jsxs)(e.span,{className:"vlist",style:{height:"1.3714em"},children:[(0,n.jsxs)(e.span,{style:{top:"-2.314em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,n.jsx)(e.span,{className:"mord",children:(0,n.jsx)(e.span,{className:"mord text",children:(0,n.jsx)(e.span,{className:"mord",children:"Dissimilarity\xa0of\xa0non-neighboring\xa0patches"})})})]}),(0,n.jsxs)(e.span,{style:{top:"-3.23em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,n.jsx)(e.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,n.jsxs)(e.span,{style:{top:"-3.677em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,n.jsx)(e.span,{className:"mord",children:(0,n.jsx)(e.span,{className:"mord text",children:(0,n.jsx)(e.span,{className:"mord",children:"Similarity\xa0of\xa0neighboring\xa0patches"})})})]})]}),(0,n.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(e.span,{className:"vlist-r",children:(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.8804em"},children:(0,n.jsx)(e.span,{})})})]})}),(0,n.jsx)(e.span,{className:"mclose nulldelimiter"})]})]})]})]})}),"\n",(0,n.jsx)(e.h4,{id:"theoretical-foundations",children:"Theoretical Foundations"}),"\n",(0,n.jsxs)(e.ol,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Basic Premise"}),": PatchMatch iterates over image patches, using a random search to guess initial correspondences, then refines these guesses through propagation and random search steps. The algorithm exploits the coherence in natural images, where similar patches tend to cluster spatially. Viewing an image as a collection of overlapping patches introduces a local perspective to global image analysis. The algorithm's reliance on spatial coherence parallels signal processing concepts such as the Wiener filter (",(0,n.jsx)(e.em,{children:"might be my week 4 slides"}),"), which also assumes neighboring values in a signal (or image) are correlated."]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Search Space Reduction"}),": Traditional nearest neighbor search in high-dimensional spaces, as required for comparing image patches, suffers from the curse of dimensionality. PatchMatch mitigates this by focusing the search on likely candidates through a guided random search, leveraging spatial coherence."]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Propagation Step"}),": Exploits the assumption that if a patch at location ",(0,n.jsxs)(e.span,{className:"katex",children:[(0,n.jsx)(e.span,{className:"katex-mathml",children:(0,n.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(e.semantics,{children:[(0,n.jsxs)(e.mrow,{children:[(0,n.jsx)(e.mo,{stretchy:"false",children:"("}),(0,n.jsx)(e.mi,{children:"x"}),(0,n.jsx)(e.mo,{separator:"true",children:","}),(0,n.jsx)(e.mi,{children:"y"}),(0,n.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,n.jsx)(e.annotation,{encoding:"application/x-tex",children:"(x, y)"})]})})}),(0,n.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,n.jsx)(e.span,{className:"mopen",children:"("}),(0,n.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,n.jsx)(e.span,{className:"mpunct",children:","}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,n.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,n.jsx)(e.span,{className:"mclose",children:")"})]})})]})," matches well with a patch at ",(0,n.jsxs)(e.span,{className:"katex",children:[(0,n.jsx)(e.span,{className:"katex-mathml",children:(0,n.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(e.semantics,{children:[(0,n.jsxs)(e.mrow,{children:[(0,n.jsx)(e.mo,{stretchy:"false",children:"("}),(0,n.jsxs)(e.msup,{children:[(0,n.jsx)(e.mi,{children:"x"}),(0,n.jsx)(e.mo,{mathvariant:"normal",lspace:"0em",rspace:"0em",children:"\u2032"})]}),(0,n.jsx)(e.mo,{separator:"true",children:","}),(0,n.jsxs)(e.msup,{children:[(0,n.jsx)(e.mi,{children:"y"}),(0,n.jsx)(e.mo,{mathvariant:"normal",lspace:"0em",rspace:"0em",children:"\u2032"})]}),(0,n.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,n.jsx)(e.annotation,{encoding:"application/x-tex",children:"(x', y')"})]})})}),(0,n.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"1.0019em",verticalAlign:"-0.25em"}}),(0,n.jsx)(e.span,{className:"mopen",children:"("}),(0,n.jsxs)(e.span,{className:"mord",children:[(0,n.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,n.jsx)(e.span,{className:"msupsub",children:(0,n.jsx)(e.span,{className:"vlist-t",children:(0,n.jsx)(e.span,{className:"vlist-r",children:(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.7519em"},children:(0,n.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(e.span,{className:"mord mtight",children:(0,n.jsx)(e.span,{className:"mord mtight",children:"\u2032"})})})]})})})})})]}),(0,n.jsx)(e.span,{className:"mpunct",children:","}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,n.jsxs)(e.span,{className:"mord",children:[(0,n.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,n.jsx)(e.span,{className:"msupsub",children:(0,n.jsx)(e.span,{className:"vlist-t",children:(0,n.jsx)(e.span,{className:"vlist-r",children:(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.7519em"},children:(0,n.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(e.span,{className:"mord mtight",children:(0,n.jsx)(e.span,{className:"mord mtight",children:"\u2032"})})})]})})})})})]}),(0,n.jsx)(e.span,{className:"mclose",children:")"})]})})]}),", then neighboring patches are likely to find good matches in the vicinity of ",(0,n.jsxs)(e.span,{className:"katex",children:[(0,n.jsx)(e.span,{className:"katex-mathml",children:(0,n.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(e.semantics,{children:[(0,n.jsxs)(e.mrow,{children:[(0,n.jsx)(e.mo,{stretchy:"false",children:"("}),(0,n.jsxs)(e.msup,{children:[(0,n.jsx)(e.mi,{children:"x"}),(0,n.jsx)(e.mo,{mathvariant:"normal",lspace:"0em",rspace:"0em",children:"\u2032"})]}),(0,n.jsx)(e.mo,{separator:"true",children:","}),(0,n.jsxs)(e.msup,{children:[(0,n.jsx)(e.mi,{children:"y"}),(0,n.jsx)(e.mo,{mathvariant:"normal",lspace:"0em",rspace:"0em",children:"\u2032"})]}),(0,n.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,n.jsx)(e.annotation,{encoding:"application/x-tex",children:"(x', y')"})]})})}),(0,n.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"1.0019em",verticalAlign:"-0.25em"}}),(0,n.jsx)(e.span,{className:"mopen",children:"("}),(0,n.jsxs)(e.span,{className:"mord",children:[(0,n.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,n.jsx)(e.span,{className:"msupsub",children:(0,n.jsx)(e.span,{className:"vlist-t",children:(0,n.jsx)(e.span,{className:"vlist-r",children:(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.7519em"},children:(0,n.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(e.span,{className:"mord mtight",children:(0,n.jsx)(e.span,{className:"mord mtight",children:"\u2032"})})})]})})})})})]}),(0,n.jsx)(e.span,{className:"mpunct",children:","}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,n.jsxs)(e.span,{className:"mord",children:[(0,n.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,n.jsx)(e.span,{className:"msupsub",children:(0,n.jsx)(e.span,{className:"vlist-t",children:(0,n.jsx)(e.span,{className:"vlist-r",children:(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.7519em"},children:(0,n.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(e.span,{className:"mord mtight",children:(0,n.jsx)(e.span,{className:"mord mtight",children:"\u2032"})})})]})})})})})]}),(0,n.jsx)(e.span,{className:"mclose",children:")"})]})})]}),". This local smoothness assumption allows for efficient propagation of good matches."]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Random Search"}),": Complements the propagation step by randomly sampling the search space around the current best match, exponentially decreasing the search window's size. This step helps escape local minima and improves the chances of finding a global optimum."]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Iterative Refinement"}),": The algorithm iteratively applies propagation and random search steps, rapidly converging to a good approximation of the nearest neighbor field. Each iteration refines the match quality, with significant improvements often seen within just a few iterations."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.admonition,{title:"Frequency Domain Analysis",type:"tip",children:(0,n.jsx)(e.p,{children:"While PatchMatch operates in the spatial domain, its principles resonate with frequency domain methods like the Fourier Transform. Both approaches dissect the image into components (patches or frequency bands) to facilitate analysis and processing."})}),"\n",(0,n.jsx)(e.h4,{id:"motivations-applications-and-advantages",children:"Motivations, Applications, and Advantages"}),"\n",(0,n.jsxs)(e.ol,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Image Inpainting"}),": PatchMatch's ability to find matching patches is crucial for inpainting, where missing or damaged parts of images are filled by borrowing information from similar patches elsewhere in the image."]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Content-Aware Resizing"}),": By identifying and manipulating patches, PatchMatch facilitates content-aware resizing, allowing images to be resized without distorting key features."]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Computational Efficiency"}),": The introduction of randomness for initial guess improvement, combined with local propagation, enables PatchMatch to achieve results quickly, making it suitable for interactive applications."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.hr,{}),"\n",(0,n.jsx)(e.h2,{id:"patchmatch-algorithm",children:"PatchMatch Algorithm"}),"\n",(0,n.jsx)(e.h3,{id:"pseudocode-for-the-patchmatch-algorithm",children:"Pseudocode for the PatchMatch Algorithm"}),"\n",(0,n.jsx)(e.p,{children:"Here's an outline of its core steps, followed by optimization strategies including vectorization and dynamic programming, and a brief analysis of its time and space complexity."}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-js",children:"// highlight-next-line\nfunction PatchMatch(imageA, imageB, patchSize)\n    Initialize nearestNeighborField (NNF) with random values\n    for iteration = 1 to maxIterations do\n        // Propagation: Improve guess by comparing with adjacent patches\n        if iteration is odd then\n            for x = 1 to imageWidth do\n                for y = 1 to imageHeight do\n                    Propagate(NNF, x, y, patchSize, isOddIteration=true)\n                    RandomSearch(NNF, x, y, imageA, imageB, patchSize)\n        else\n            for x = imageWidth down to 1 do\n                for y = imageHeight down to 1 do\n                    Propagate(NNF, x, y, patchSize, isOddIteration=false)\n                    RandomSearch(NNF, x, y, imageA, imageB, patchSize)\n    return NNF\n// highlight-next-line\nfunction Propagate(NNF, x, y, patchSize, isOddIteration)\n    currentBest = NNF[x, y]\n    if isOddIteration then\n        left = NNF[x-1, y]\n        up = NNF[x, y-1]\n        CheckAndUpdateBest(NNF, x, y, left, patchSize)\n        CheckAndUpdateBest(NNF, x, y, up, patchSize)\n    else\n        right = NNF[x+1, y]\n        down = NNF[x, y+1]\n        CheckAndUpdateBest(NNF, x, y, right, patchSize)\n        CheckAndUpdateBest(NNF, x, y, down, patchSize)\n\n// highlight-next-line\nfunction RandomSearch(NNF, x, y, imageA, imageB, patchSize)\n    currentBest = NNF[x, y]\n    searchRadius = max(imageWidth, imageHeight)\n    while searchRadius > 1 do\n        randomPatch = ChooseRandomPatch(imageB, searchRadius, currentBest)\n        CheckAndUpdateBest(NNF, x, y, randomPatch, patchSize)\n        searchRadius = searchRadius / 2\n"})}),"\n",(0,n.jsx)(e.h3,{id:"brute-force-implementation-in-python",children:"Brute-Force Implementation in Python"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:'import numpy as np\nfrom skimage import io, util\nimport matplotlib.pyplot as plt\n\ndef patch_distance(patch1, patch2, mask):\n    """\n    Compute the L2 distance between two patches, using a mask to exclude\n    invalid pixels.\n    \n    Args:\n    - patch1: First patch.\n    - patch2: Second patch.\n    - mask: A boolean mask indicating valid pixels (True=valid).\n\n    Returns:\n    - The L2 distance between the valid pixels of the two patches.\n    """\n    diff = patch1 - patch2\n    valid_diff = diff[mask]\n    distance = np.sum(valid_diff ** 2)\n    return distance\n\ndef extract_patch(image, x, y, k, padding=\'mirror\'):\n    """\n    Extracts a patch centered at (x, y) with size kxk from the image, applying\n    padding if necessary.\n\n    Args:\n    - image: The source image.\n    - x, y: Center coordinates of the patch.\n    - k: Size of the patch (assumed to be odd).\n    - padding: Method of padding to use for boundary patches.\n\n    Returns:\n    - The extracted patch.\n    - A mask indicating valid pixels within the patch.\n    """\n    padded_image = util.pad(image, ((k//2, k//2), (k//2, k//2), (0, 0)), mode=padding)\n    patch = padded_image[y:y+k, x:x+k]\n    # All pixels are valid if extracted from the padded image\n    mask = np.ones((k, k), dtype=bool)\n    return patch, mask\n\ndef bruteForceNNF(target_image, source_image, k):\n    """\n    Computes the nearest neighbor field (NNF) from target_image to source_image\n    using a brute-force approach.\n\n    Args:\n    - target_image: The target image.\n    - source_image: The source image.\n    - k: The patch size.\n\n    Returns:\n    - NNF: A 2-D array with the same size as target_image containing for each\n           pixel the coordinates of the closest patch in the source image.\n    """\n    target_h, target_w, _ = target_image.shape\n    source_h, source_w, _ = source_image.shape\n    NNF = np.zeros((target_h, target_w, 2), dtype=np.int32)\n\n    for y in range(target_h):\n        for x in range(target_w):\n            min_distance = np.inf\n            min_coords = (0, 0)\n            target_patch, target_mask = extract_patch(target_image, x, y, k)\n\n            for sy in range(source_h - k + 1):\n                for sx in range(source_w - k + 1):\n                    source_patch, _ = extract_patch(source_image, sx, sy, k, padding=\'edge\')\n                    distance = patch_distance(target_patch, source_patch, target_mask)\n\n                    if distance < min_distance:\n                        min_distance = distance\n                        min_coords = (sy, sx)\n            \n            NNF[y, x] = min_coords\n\n    return NNF\n\n# Example usage\ntarget_image = io.imread(\'target.png\') / 255.0\nsource_image = io.imread(\'source.png\') / 255.0\nk = 11  # Patch size\n\nNNF = bruteForceNNF(target_image, source_image, k)\nprint("NNF computed.")\n'})}),"\n",(0,n.jsx)(e.h3,{id:"thought-process-and-optimization-opportunities",children:"Thought Process and Optimization Opportunities"}),"\n",(0,n.jsxs)(e.ol,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Brute-force Approach"}),": This code iterates over every pixel in the target image and compares its patch with every possible patch in the source image. It's a direct but slow method due to the nested loops."]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Optimization - Vectorization and Avoid Repetition"}),": The ",(0,n.jsx)(e.code,{children:"patch_distance"})," computation is ripe for optimization. By using NumPy operations over loops, we can reduce computation time. However, due to the need to compare all pairs of patches, complete vectorization is challenging without significantly increasing memory usage. The brute-force method recalculates distances for overlapping patches. Caching results for previously calculated patches or using integral images to quickly calculate patch sums could reduce redundant calculations."]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Dynamic Programming"}),": Can you use Dynamic Programming to speed up the computations? It could be used to propagate good matches to adjacent pixels, which ",(0,n.jsx)(e.em,{children:"is"})," more efficient. What do you think?"]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Space Complexity"}),": The NNF array has a size proportional to the target image (",(0,n.jsxs)(e.span,{className:"katex",children:[(0,n.jsx)(e.span,{className:"katex-mathml",children:(0,n.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(e.semantics,{children:[(0,n.jsxs)(e.mrow,{children:[(0,n.jsx)(e.mi,{mathvariant:"script",children:"O"}),(0,n.jsx)(e.mo,{stretchy:"false",children:"("}),(0,n.jsxs)(e.msub,{children:[(0,n.jsx)(e.mtext,{children:"target"}),(0,n.jsx)(e.mi,{children:"h"})]}),(0,n.jsx)(e.mo,{children:"\u2217"}),(0,n.jsxs)(e.msub,{children:[(0,n.jsx)(e.mtext,{children:"target"}),(0,n.jsx)(e.mi,{children:"w"})]})]}),(0,n.jsx)(e.annotation,{encoding:"application/x-tex",children:"\\mathcal{O}(\\text{target}_h * \\text{target}_w"})]})})}),(0,n.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,n.jsx)(e.span,{className:"mord mathcal",style:{marginRight:"0.02778em"},children:"O"}),(0,n.jsx)(e.span,{className:"mopen",children:"("}),(0,n.jsxs)(e.span,{className:"mord",children:[(0,n.jsx)(e.span,{className:"mord text",children:(0,n.jsx)(e.span,{className:"mord",children:"target"})}),(0,n.jsx)(e.span,{className:"msupsub",children:(0,n.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(e.span,{className:"vlist-r",children:[(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.242em"},children:(0,n.jsxs)(e.span,{style:{top:"-2.4559em",marginRight:"0.05em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(e.span,{className:"mord mathnormal mtight",children:"h"})})]})}),(0,n.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(e.span,{className:"vlist-r",children:(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.2441em"},children:(0,n.jsx)(e.span,{})})})]})})]}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(e.span,{className:"mbin",children:"\u2217"}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"0.8592em",verticalAlign:"-0.2441em"}}),(0,n.jsxs)(e.span,{className:"mord",children:[(0,n.jsx)(e.span,{className:"mord text",children:(0,n.jsx)(e.span,{className:"mord",children:"target"})}),(0,n.jsx)(e.span,{className:"msupsub",children:(0,n.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(e.span,{className:"vlist-r",children:[(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.0573em"},children:(0,n.jsxs)(e.span,{style:{top:"-2.4559em",marginRight:"0.05em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(e.span,{className:"mord mathnormal mtight",style:{marginRight:"0.02691em"},children:"w"})})]})}),(0,n.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(e.span,{className:"vlist-r",children:(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.2441em"},children:(0,n.jsx)(e.span,{})})})]})})]})]})]})]}),")), storing two integers (coordinates) for each pixel."]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Time Complexity"}),": ",(0,n.jsxs)(e.span,{className:"katex",children:[(0,n.jsx)(e.span,{className:"katex-mathml",children:(0,n.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(e.semantics,{children:[(0,n.jsxs)(e.mrow,{children:[(0,n.jsx)(e.mi,{mathvariant:"script",children:"O"}),(0,n.jsx)(e.mo,{stretchy:"false",children:"("}),(0,n.jsxs)(e.msub,{children:[(0,n.jsx)(e.mtext,{children:"target"}),(0,n.jsx)(e.mi,{children:"h"})]}),(0,n.jsx)(e.mo,{children:"\u2217"}),(0,n.jsxs)(e.msub,{children:[(0,n.jsx)(e.mtext,{children:"target"}),(0,n.jsx)(e.mi,{children:"w"})]}),(0,n.jsx)(e.mo,{children:"\u2217"}),(0,n.jsx)(e.mo,{stretchy:"false",children:"("}),(0,n.jsxs)(e.msub,{children:[(0,n.jsx)(e.mtext,{children:"source"}),(0,n.jsx)(e.mi,{children:"h"})]}),(0,n.jsx)(e.mo,{children:"\u2212"}),(0,n.jsx)(e.mi,{children:"k"}),(0,n.jsx)(e.mo,{children:"+"}),(0,n.jsx)(e.mn,{children:"1"}),(0,n.jsx)(e.mo,{stretchy:"false",children:")"}),(0,n.jsx)(e.mo,{children:"\u2217"}),(0,n.jsx)(e.mo,{stretchy:"false",children:"("}),(0,n.jsxs)(e.msub,{children:[(0,n.jsx)(e.mtext,{children:"source"}),(0,n.jsx)(e.mi,{children:"w"})]}),(0,n.jsx)(e.mo,{children:"\u2212"}),(0,n.jsx)(e.mi,{children:"k"}),(0,n.jsx)(e.mo,{children:"+"}),(0,n.jsx)(e.mn,{children:"1"}),(0,n.jsx)(e.mo,{stretchy:"false",children:")"}),(0,n.jsx)(e.mo,{children:"\u2217"}),(0,n.jsxs)(e.msup,{children:[(0,n.jsx)(e.mi,{children:"k"}),(0,n.jsx)(e.mn,{children:"2"})]}),(0,n.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,n.jsx)(e.annotation,{encoding:"application/x-tex",children:"\\mathcal{O}(\\text{target}_h * \\text{target}_w * (\\text{source}_h-k+1) * (\\text{source}_w-k+1) * k^2)"})]})})}),(0,n.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,n.jsx)(e.span,{className:"mord mathcal",style:{marginRight:"0.02778em"},children:"O"}),(0,n.jsx)(e.span,{className:"mopen",children:"("}),(0,n.jsxs)(e.span,{className:"mord",children:[(0,n.jsx)(e.span,{className:"mord text",children:(0,n.jsx)(e.span,{className:"mord",children:"target"})}),(0,n.jsx)(e.span,{className:"msupsub",children:(0,n.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(e.span,{className:"vlist-r",children:[(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.242em"},children:(0,n.jsxs)(e.span,{style:{top:"-2.4559em",marginRight:"0.05em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(e.span,{className:"mord mathnormal mtight",children:"h"})})]})}),(0,n.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(e.span,{className:"vlist-r",children:(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.2441em"},children:(0,n.jsx)(e.span,{})})})]})})]}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(e.span,{className:"mbin",children:"\u2217"}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"0.8592em",verticalAlign:"-0.2441em"}}),(0,n.jsxs)(e.span,{className:"mord",children:[(0,n.jsx)(e.span,{className:"mord text",children:(0,n.jsx)(e.span,{className:"mord",children:"target"})}),(0,n.jsx)(e.span,{className:"msupsub",children:(0,n.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(e.span,{className:"vlist-r",children:[(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.0573em"},children:(0,n.jsxs)(e.span,{style:{top:"-2.4559em",marginRight:"0.05em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(e.span,{className:"mord mathnormal mtight",style:{marginRight:"0.02691em"},children:"w"})})]})}),(0,n.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(e.span,{className:"vlist-r",children:(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.2441em"},children:(0,n.jsx)(e.span,{})})})]})})]}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(e.span,{className:"mbin",children:"\u2217"}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,n.jsx)(e.span,{className:"mopen",children:"("}),(0,n.jsxs)(e.span,{className:"mord",children:[(0,n.jsx)(e.span,{className:"mord text",children:(0,n.jsx)(e.span,{className:"mord",children:"source"})}),(0,n.jsx)(e.span,{className:"msupsub",children:(0,n.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(e.span,{className:"vlist-r",children:[(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.3361em"},children:(0,n.jsxs)(e.span,{style:{top:"-2.55em",marginRight:"0.05em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(e.span,{className:"mord mathnormal mtight",children:"h"})})]})}),(0,n.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(e.span,{className:"vlist-r",children:(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.15em"},children:(0,n.jsx)(e.span,{})})})]})})]}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"0.7778em",verticalAlign:"-0.0833em"}}),(0,n.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(e.span,{className:"mbin",children:"+"}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,n.jsx)(e.span,{className:"mord",children:"1"}),(0,n.jsx)(e.span,{className:"mclose",children:")"}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(e.span,{className:"mbin",children:"\u2217"}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,n.jsx)(e.span,{className:"mopen",children:"("}),(0,n.jsxs)(e.span,{className:"mord",children:[(0,n.jsx)(e.span,{className:"mord text",children:(0,n.jsx)(e.span,{className:"mord",children:"source"})}),(0,n.jsx)(e.span,{className:"msupsub",children:(0,n.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(e.span,{className:"vlist-r",children:[(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.1514em"},children:(0,n.jsxs)(e.span,{style:{top:"-2.55em",marginRight:"0.05em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(e.span,{className:"mord mathnormal mtight",style:{marginRight:"0.02691em"},children:"w"})})]})}),(0,n.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(e.span,{className:"vlist-r",children:(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.15em"},children:(0,n.jsx)(e.span,{})})})]})})]}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"0.7778em",verticalAlign:"-0.0833em"}}),(0,n.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(e.span,{className:"mbin",children:"+"}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,n.jsx)(e.span,{className:"mord",children:"1"}),(0,n.jsx)(e.span,{className:"mclose",children:")"}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(e.span,{className:"mbin",children:"\u2217"}),(0,n.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(e.span,{className:"base",children:[(0,n.jsx)(e.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,n.jsxs)(e.span,{className:"mord",children:[(0,n.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,n.jsx)(e.span,{className:"msupsub",children:(0,n.jsx)(e.span,{className:"vlist-t",children:(0,n.jsx)(e.span,{className:"vlist-r",children:(0,n.jsx)(e.span,{className:"vlist",style:{height:"0.8141em"},children:(0,n.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,n.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(e.span,{className:"mord mtight",children:"2"})})]})})})})})]}),(0,n.jsx)(e.span,{className:"mclose",children:")"})]})]})]})," due to the exhaustive search. This highlights the need for the PatchMatch algorithm, which significantly improves the runtime."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.hr,{}),"\n",(0,n.jsx)(e.p,{children:"So I provided a very rough implementation in Python that took way too long and one that I need to improve upon. But maybe this gives you some insight into how the algorithm works for the brute force method."}),"\n"]})}function o(s={}){const{wrapper:e}={...(0,t.R)(),...s.components};return e?(0,n.jsx)(e,{...s,children:(0,n.jsx)(m,{...s})}):m(s)}},8453:(s,e,a)=>{a.d(e,{R:()=>l,x:()=>c});var n=a(6540);const t={},i=n.createContext(t);function l(s){const e=n.useContext(i);return n.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function c(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(t):s.components||t:l(s.components),n.createElement(i.Provider,{value:e},s.children)}}}]);